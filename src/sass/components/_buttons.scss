@use "../abstracts/" as *;

.button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  text-decoration: none;
  line-height: 1.5;
  letter-spacing: $button-ls;
  font-family: $button-ff;
  font-size: $button-fs;
  font-weight: $button-fw;
  text-transform: $button-tt;
  padding: $button-padding;
  background-color: $button-default-bg;
  border: $button-border;
  border-radius: $button-br;

  // Primary
  &[data-style="primary"] {
    background-color: $button-primary-bg;
    color: $button-primary-clr;
    border-color: $button-primary-border-clr;

    &:hover {
      background-color: $button-primary-bg-hover;
      color: $button-primary-clr-hover;
    }

    &:focus,
    &:focus-visible {
      outline: $button-primary-outline;
      outline-offset: $button-primary-outline-offset;
    }
    &:focus:not(:focus-visible) {
      outline: 0;
    }
  }

  // Outline
  &[data-style="outline"] {
    background-color: $button-outline-bg;
    color: $button-outline-clr;
    border-color: $button-outline-border-clr;

    &:hover {
      background-color: $button-outline-bg-hover;
      color: $button-outline-clr-hover;
    }

    &:focus,
    &:focus-visible {
      outline: $button-outline-outline;
      outline-offset: $button-outline-outline-offset;
    }
    &:focus:not(:focus-visible) {
      outline: 0;
    }
  }

  // Inverted
  &[data-style="inverted"] {
    background-color: $button-inverted-bg;
    color: $button-inverted-clr;
    border-color: $button-inverted-border-clr;

    &:hover {
      background-color: $button-inverted-bg-hover;
      color: $button-inverted-clr-hover;
    }

    &:focus,
    &:focus-visible {
      outline: $button-inverted-outline;
      outline-offset: $button-inverted-outline-offset;
    }
    &:focus:not(:focus-visible) {
      outline: 0;
    }
  }

  // Muted
  &[data-style="muted"] {
    background-color: $button-muted-bg;
    color: $button-muted-clr;
    border-color: $button-muted-border-clr;
    padding: $button-muted-padding;

    &:hover {
      background-color: $button-muted-bg-hover;
      color: $button-muted-clr-hover;
    }

    &:focus,
    &:focus-visible {
      outline: $button-muted-outline;
      outline-offset: $button-muted-outline-offset;
    }
    &:focus:not(:focus-visible) {
      outline: 0;
    }
  }

  &.has-icon {
    display: flex;
    align-items: center;
    gap: 1rem;

    svg,
    img {
      width: 30px;
      height: 30px;
    }
  }
}

// Responsive toggle button for mobile
.toggle-button {
  background: none;
  border: none;
  cursor: pointer;
  display: grid;
  gap: 5px;
  padding-block: 0.5rem;
  display: none;

  .line {
    display: block;
    height: 5px;
    background-color: $neutral-900;
    border-radius: 10px;
    &-1 {
      width: 30px;
    }
    &-2 {
      width: 20px;
    }
    &-3 {
      width: 10px;
    }
  }

  &:focus-visible {
    outline: 3px dotted $neutral-900;
    outline-offset: 3px;
  }
}

// Added for this project

// Switch Button (used in step 2)
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;

  input {
    display: none;

    &:checked + .slider {
      background-color: $project-blue-900;
    }

    &:focus + .slider {
      box-shadow: 0 0 1px $project-blue-900;
    }
    &:checked + .slider:before {
      -webkit-transform: translateX(26px);
      -ms-transform: translateX(26px);
      transform: translateX(26px);
    }
  }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: $project-blue-900;
    -webkit-transition: 0.4s;
    transition: 0.4s;
  
    &::before {
      position: absolute;
      content: "";
      height: 26px;
      width: 26px;
      left: 4px;
      bottom: 4px;
      background-color: white;
      -webkit-transition: 0.4s;
      transition: 0.4s;
    }
  
    &.round {
      border-radius: 34px;
      &::before {
        border-radius: 50%;
      }
    }
  }
}


